# Production Dockerfile for NSAI Orchestrator MCP
# Multi-stage build for optimal image size and security

# Build stage for dependencies
FROM python:3.11-slim as builder

# Set build arguments
ARG BUILD_DATE
ARG VERSION
ARG VCS_REF

# Add labels for metadata
LABEL org.opencontainers.image.title="NSAI Orchestrator MCP" \
      org.opencontainers.image.description="Production-grade multi-agent orchestration platform" \
      org.opencontainers.image.version="${VERSION}" \
      org.opencontainers.image.created="${BUILD_DATE}" \
      org.opencontainers.image.revision="${VCS_REF}" \
      org.opencontainers.image.vendor="NSAI Team" \
      org.opencontainers.image.licenses="MIT"

# Install system dependencies for building
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    git \
    && rm -rf /var/lib/apt/lists/*

# Create virtual environment
ENV VIRTUAL_ENV=/opt/venv
RUN python3 -m venv $VIRTUAL_ENV
ENV PATH="$VIRTUAL_ENV/bin:$PATH"

# Upgrade pip and install build tools
RUN pip install --no-cache-dir --upgrade pip setuptools wheel

# Copy requirements first for better layer caching
COPY requirements.txt /tmp/requirements.txt

# Install Python dependencies
RUN pip install --no-cache-dir -r /tmp/requirements.txt

# Production stage
FROM python:3.11-slim as production

# Set build arguments
ARG BUILD_DATE
ARG VERSION
ARG VCS_REF

# Add labels
LABEL org.opencontainers.image.title="NSAI Orchestrator MCP" \
      org.opencontainers.image.description="Production-grade multi-agent orchestration platform" \
      org.opencontainers.image.version="${VERSION}" \
      org.opencontainers.image.created="${BUILD_DATE}" \
      org.opencontainers.image.revision="${VCS_REF}" \
      org.opencontainers.image.vendor="NSAI Team" \
      org.opencontainers.image.licenses="MIT"

# Install runtime dependencies only
RUN apt-get update && apt-get install -y \
    curl \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Create non-root user for security
RUN groupadd --gid 1000 nsai \
    && useradd --uid 1000 --gid nsai --shell /bin/bash --create-home nsai

# Copy virtual environment from builder stage
COPY --from=builder /opt/venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Set working directory
WORKDIR /app

# Copy application code
COPY --chown=nsai:nsai . .

# Create necessary directories
RUN mkdir -p /app/logs /app/data /app/plugins \
    && chown -R nsai:nsai /app

# Set up Python path
ENV PYTHONPATH=/app
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1

# Security: Don't run as root
USER nsai

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:4141/health || exit 1

# Expose port
EXPOSE 4141

# Set default environment
ENV ENVIRONMENT=production
ENV HOST=0.0.0.0
ENV PORT=4141

# Start command
CMD ["python", "-m", "uvicorn", "main_enhanced:app", "--host", "0.0.0.0", "--port", "4141", "--workers", "1"]